syntax = "proto3";

package proto;

option go_package = "english-ai-full/ecomm-grpc/proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service EcommUser {
  rpc CreateUser(UserReq) returns (UserReq);
  rpc SaveUser(UserReq) returns (google.protobuf.Empty);
  rpc UpdateUser(UserReq) returns (UserReq);
  rpc DeleteUser(UserReq) returns (google.protobuf.Empty);
  rpc FindAllUsers(google.protobuf.Empty) returns (UserList);
  rpc FindByEmail(UserReq) returns (UserReq);
  rpc FindUsersByPage(PageRequest) returns (UserList);
  rpc Login(LoginRequest) returns (UserReq);
  rpc Register(UserReq) returns (RegisterResponse);
}

// rpc GetUserById(UserReq) returns (UserReq);
message UserReq {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
  bool is_admin = 5;
  int64 phone = 6;
  string image = 7;
  string address = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

message UserRes {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
  bool is_admin = 5;
  google.protobuf.Timestamp created_at = 6;
  int64 phone = 7;
  string image = 8;
  string address = 9;
  google.protobuf.Timestamp updated_at = 10;
}
message ListUserRes {
  repeated UserRes users = 1;
}




message PageRequest {
  int32 page_number = 1;
  int32 page_size = 2;
}

message UserList {
  repeated UserRes users = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  bool success = 1;
  UserRes user = 2;
}
